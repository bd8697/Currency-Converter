package com.viorel.atestat;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.Texture.TextureFilter;
import com.badlogic.gdx.graphics.g2d.BitmapFont;
import com.badlogic.gdx.graphics.g2d.Sprite;
import com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator;
import com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.FreeTypeFontParameter;

public class Assets {

	public static Texture texture_back;
	public static Sprite sprite_back;
	public static Texture texture_convert_from;
	public static Sprite convert_from;
	public static Texture texture_convert_to;
	public static Sprite convert_to;
	public static Texture texture_convert_amount;
	public static Sprite convert_amount;
	public static Texture texture_b1;
	public static Sprite b1;
	public static Texture texture_check;
	public static Sprite check;
	public static Texture texture_bar;
	public static Sprite bar;
	public static Texture texture_b2;
	public static Sprite b2;
	public static Texture texture_b3;
	public static Sprite b3;
	public static Texture texture_b4;
	public static Sprite b4;
	public static Texture texture_b5;
	public static Sprite b5;
	public static Texture texture_b6;
	public static Sprite b6;
	public static Texture texture_b7;
	public static Sprite b7;
	public static Texture texture_b8;
	public static Sprite b8;
	public static Texture texture_b9;
	public static Sprite b9;
	public static Texture texture_b0;
	public static Sprite b0;
	public static Texture texture_checkpressed;
	public static Sprite checkpressed;
	public static Texture texture_b1pressed;
	public static Sprite b1pressed;
	public static Texture texture_b2pressed;
	public static Sprite b2pressed;
	public static Texture texture_b3pressed;
	public static Sprite b3pressed;
	public static Texture texture_b4pressed;
	public static Sprite b4pressed;
	public static Texture texture_b5pressed;
	public static Sprite b5pressed;
	public static Texture texture_b6pressed;
	public static Sprite b6pressed;
	public static Texture texture_b7pressed;
	public static Sprite b7pressed;
	public static Texture texture_b8pressed;
	public static Sprite b8pressed;
	public static Texture texture_b9pressed;
	public static Sprite b9pressed;
	public static Texture texture_b0pressed;
	public static Sprite b0pressed;
	public static Texture texture_dollar;
	public static Sprite dollar;
	public static Texture texture_euro;
	public static Sprite euro;
	public static Texture texture_yen;
	public static Sprite yen;
	public static Texture texture_won;
	public static Sprite won;
	public static Texture texture_leu;
	public static Sprite leu;
	public static Texture texture_pound;
	public static Sprite pound;
	public static Texture texture_rupee;
	public static Sprite rupee;
	public static Texture texture_franc;
	public static Sprite franc;
	public static Texture texture_eurom;
	public static Sprite eurom;
	public static Texture texture_yenm;
	public static Sprite yenm;
	public static Texture texture_wonm;
	public static Sprite wonm;
	public static Texture texture_leum;
	public static Sprite leum;
	public static Texture texture_poundm;
	public static Sprite poundm;
	public static Texture texture_rupeem;
	public static Sprite rupeem;
	public static Texture texture_francm;
	public static Sprite francm;
	public static Texture texture_dollarm;
	public static Sprite dollarm;
	public static Texture texture_dollarpressed;
	public static Sprite dollarpressed;
	public static Texture texture_europressed;
	public static Sprite europressed;
	public static Texture texture_yenpressed;
	public static Sprite yenpressed;
	public static Texture texture_poundpressed;
	public static Sprite poundpressed;
	public static Texture texture_rupeepressed;
	public static Sprite rupeepressed;
	public static Texture texture_francpressed;
	public static Sprite francpressed;
	public static Texture texture_leupressed;
	public static Sprite leupressed;
	public static Texture texture_wonpressed;
	public static Sprite wonpressed;
	public static BitmapFont fontamount;
	public static BitmapFont fontfinal;



	public static void load()
	{
		texture_back=new Texture(Gdx.files.internal("menu/bg.jpg"));
		texture_back.setFilter(TextureFilter.Linear, TextureFilter.Linear);
		sprite_back=new Sprite(texture_back);
		sprite_back.flip(false, true);
		texture_convert_from=new Texture(Gdx.files.internal("menu/convertfromfinal.png"));
		convert_from=new Sprite(texture_convert_from);
		convert_from.flip(false, true);
		texture_convert_to=new Texture(Gdx.files.internal("menu/converttofinal.png"));
		convert_to=new Sprite(texture_convert_to);
		convert_to.flip(false, true);
		texture_convert_amount=new Texture(Gdx.files.internal("menu/amounttoconvertfinal.png"));
		convert_amount=new Sprite(texture_convert_amount);
		convert_amount.flip(false, true);
		texture_check=new Texture(Gdx.files.internal("menu/check.png"));
		check=new Sprite(texture_check);
		check.flip(false, true);
		texture_bar=new Texture(Gdx.files.internal("menu/bar.png"));
		bar=new Sprite(texture_bar);
		bar.flip(false, true);
		texture_b1=new Texture(Gdx.files.internal("menu/1.png"));
		b1=new Sprite(texture_b1);
		b1.flip(false, true);
		texture_b2=new Texture(Gdx.files.internal("menu/2.png"));
		b2=new Sprite(texture_b2);
		b2.flip(false, true);
		texture_b3=new Texture(Gdx.files.internal("menu/3.png"));
		b3=new Sprite(texture_b3);
		b3.flip(false, true);
		texture_b4=new Texture(Gdx.files.internal("menu/4.png"));
		b4=new Sprite(texture_b4);
		b4.flip(false, true);
		texture_b5=new Texture(Gdx.files.internal("menu/5.png"));
		b5=new Sprite(texture_b5);
		b5.flip(false, true);
		texture_b6=new Texture(Gdx.files.internal("menu/6.png"));
		b6=new Sprite(texture_b6);
		b6.flip(false, true);
		texture_b7=new Texture(Gdx.files.internal("menu/7.png"));
		b7=new Sprite(texture_b7);
		b7.flip(false, true);
		texture_b8=new Texture(Gdx.files.internal("menu/8.png"));
		b8=new Sprite(texture_b8);
		b8.flip(false, true);
		texture_b9=new Texture(Gdx.files.internal("menu/9.png"));
		b9=new Sprite(texture_b9);
		b9.flip(false, true);
		texture_b0=new Texture(Gdx.files.internal("menu/0.png"));
		b0=new Sprite(texture_b0);
		b0.flip(false, true);
		texture_checkpressed=new Texture(Gdx.files.internal("menu/checkpressed.png"));
		checkpressed=new Sprite(texture_checkpressed);
		checkpressed.flip(false, true);
		texture_b1pressed=new Texture(Gdx.files.internal("menu/1pressed.png"));
		b1pressed=new Sprite(texture_b1pressed);
		b1pressed.flip(false, true);
		texture_b2pressed=new Texture(Gdx.files.internal("menu/2pressed.png"));
		b2pressed=new Sprite(texture_b2pressed);
		b2pressed.flip(false, true);
		texture_b3pressed=new Texture(Gdx.files.internal("menu/3pressed.png"));
		b3pressed=new Sprite(texture_b3pressed);
		b3pressed.flip(false, true);
		texture_b4pressed=new Texture(Gdx.files.internal("menu/4pressed.png"));
		b4pressed=new Sprite(texture_b4pressed);
		b4pressed.flip(false, true);
		texture_b5pressed=new Texture(Gdx.files.internal("menu/5pressed.png"));
		b5pressed=new Sprite(texture_b5pressed);
		b5pressed.flip(false, true);
		texture_b6pressed=new Texture(Gdx.files.internal("menu/6pressed.png"));
		b6pressed=new Sprite(texture_b6pressed);
		b6pressed.flip(false, true);
		texture_b7pressed=new Texture(Gdx.files.internal("menu/7pressed.png"));
		b7pressed=new Sprite(texture_b7pressed);
		b7pressed.flip(false, true);
		texture_b8pressed=new Texture(Gdx.files.internal("menu/8pressed.png"));
		b8pressed=new Sprite(texture_b8pressed);
		b8pressed.flip(false, true);
		texture_b9pressed=new Texture(Gdx.files.internal("menu/9pressed.png"));
		b9pressed=new Sprite(texture_b9pressed);
		b9pressed.flip(false, true);
		texture_b0pressed=new Texture(Gdx.files.internal("menu/0pressed.png"));
		b0pressed=new Sprite(texture_b0pressed);
		b0pressed.flip(false, true);
		texture_yen=new Texture(Gdx.files.internal("menu/yen.png"));
		yen=new Sprite(texture_yen);
		yen.flip(false, true);
		texture_dollar=new Texture(Gdx.files.internal("menu/dollar.png"));
		dollar=new Sprite(texture_dollar);
		dollar.flip(false, true);
		texture_euro=new Texture(Gdx.files.internal("menu/euro.png"));
		euro=new Sprite(texture_euro);
		euro.flip(false, true);
		texture_won=new Texture(Gdx.files.internal("menu/won.png"));
		won=new Sprite(texture_won);
		won.flip(false, true);
		texture_leu=new Texture(Gdx.files.internal("menu/leu.png"));
		leu=new Sprite(texture_leu);
		leu.flip(false, true);
		texture_pound=new Texture(Gdx.files.internal("menu/pound.png"));
		pound=new Sprite(texture_pound);
		pound.flip(false, true);
		texture_franc=new Texture(Gdx.files.internal("menu/franc.png"));
		franc=new Sprite(texture_franc);
		franc.flip(false, true);
		texture_rupee=new Texture(Gdx.files.internal("menu/rupee.png"));
		rupee=new Sprite(texture_rupee);
		rupee.flip(false, true);
		texture_yenm=new Texture(Gdx.files.internal("menu/yenm.png"));
		yenm=new Sprite(texture_yenm);
		yenm.flip(false, true);
		texture_dollarm=new Texture(Gdx.files.internal("menu/dollarm.png"));
		dollarm=new Sprite(texture_dollarm);
		dollarm.flip(false, true);
		texture_eurom=new Texture(Gdx.files.internal("menu/eurom.png"));
		eurom=new Sprite(texture_eurom);
		eurom.flip(false, true);
		texture_wonm=new Texture(Gdx.files.internal("menu/wonm.png"));
		wonm=new Sprite(texture_wonm);
		wonm.flip(false, true);
		texture_leum=new Texture(Gdx.files.internal("menu/leim.png"));
		leum=new Sprite(texture_leum);
		leum.flip(false, true);
		texture_poundm=new Texture(Gdx.files.internal("menu/poundm.png"));
		poundm=new Sprite(texture_poundm);
		poundm.flip(false, true);
		texture_francm=new Texture(Gdx.files.internal("menu/francm.png"));
		francm=new Sprite(texture_francm);
		francm.flip(false, true);
		texture_rupeem=new Texture(Gdx.files.internal("menu/rupeem.png"));
		rupeem=new Sprite(texture_rupeem);
		rupeem.flip(false, true);
		texture_rupeepressed=new Texture(Gdx.files.internal("menu/rupeepressed.png"));
		rupeepressed=new Sprite(texture_rupeepressed);
		rupeepressed.flip(false, true);
		texture_dollarpressed=new Texture(Gdx.files.internal("menu/dollarpressed.png"));
		dollarpressed=new Sprite(texture_dollarpressed);
		dollarpressed.flip(false, true);
		texture_europressed=new Texture(Gdx.files.internal("menu/europressed2.png"));
		europressed=new Sprite(texture_europressed);
		europressed.flip(false, true);
		texture_yenpressed=new Texture(Gdx.files.internal("menu/yenpressed.png"));
		yenpressed=new Sprite(texture_yenpressed);
		yenpressed.flip(false, true);
		texture_wonpressed=new Texture(Gdx.files.internal("menu/wonpressed.png"));
		wonpressed=new Sprite(texture_wonpressed);
		wonpressed.flip(false, true);
		texture_leupressed=new Texture(Gdx.files.internal("menu/leupressed.png"));
		leupressed=new Sprite(texture_leupressed);
		leupressed.flip(false, true);
		texture_francpressed=new Texture(Gdx.files.internal("menu/francpressed.png"));
		francpressed=new Sprite(texture_francpressed);
		francpressed.flip(false, true);
		texture_poundpressed=new Texture(Gdx.files.internal("menu/poundpressed.png"));
		poundpressed=new Sprite(texture_poundpressed);
		poundpressed.flip(false, true);

		FreeTypeFontGenerator genfontamount=new FreeTypeFontGenerator(Gdx.files.internal("menu/CharlieBrownM54222.ttf"));
		FreeTypeFontParameter size = new FreeTypeFontParameter();
		size.size = 85;
		size.flip=true;
		fontamount=genfontamount. generateFont(size);
		fontamount.getRegion().getTexture().setFilter(TextureFilter.Linear, TextureFilter.Linear);
		genfontamount.dispose();

		FreeTypeFontGenerator genfontfinal=new FreeTypeFontGenerator(Gdx.files.internal("menu/CharlieBrownM54222.ttf"));
		FreeTypeFontParameter sizefinal = new FreeTypeFontParameter();
		sizefinal.size = 200;
		sizefinal.flip=true;
		fontamount=genfontfinal. generateFont(size);
		fontamount.getRegion().getTexture().setFilter(TextureFilter.Linear, TextureFilter.Linear);
		genfontfinal.dispose();

	}




}
